            ; DATA XREF from entry0 @ +0x21
┌ 163: int main (uint32_t argc, char **argv);
│           ; var char **s1 @ rbp-0x10
│           ; var uint32_t var_4h @ rbp-0x4
│           ; arg uint32_t argc @ rdi
│           ; arg char **argv @ rsi
│           0x00001169      55             push rbp
│           0x0000116a      4889e5         mov rbp, rsp
│           0x0000116d      4883ec10       sub rsp, 0x10
│           0x00001171      897dfc         mov dword [var_4h], edi     ; argc
│           0x00001174      488975f0       mov qword [s1], rsi         ; argv
│           0x00001178      837dfc02       cmp dword [var_4h], 2

this block just prins how u run the program

│       ┌─< 0x0000117c      7428           je 0x11a6
│       │   0x0000117e      488b45f0       mov rax, qword [s1]
│       │   0x00001182      488b00         mov rax, qword [rax]
│       │   0x00001185      4889c6         mov rsi, rax
│       │   0x00001188      488d05790e00.  lea rax, qword str.Usage_:__s__license_key_here ; 0x2008 ; "Usage : %s <license key here>\n"
│       │   0x0000118f      4889c7         mov rdi, rax                ; const char *format
│       │   0x00001192      b800000000     mov eax, 0
│       │   0x00001197      e8a4feffff     call sym.imp.printf         ; int printf(const char *format)
│       │   0x0000119c      bf00000000     mov edi, 0                  ; int status
│       │   0x000011a1      e8bafeffff     call sym.imp.exit           ; void exit(int status)
│       │   ; CODE XREF from main @ 0x117c


│       └─> 0x000011a6      488b45f0       mov rax, qword [s1]
│           0x000011aa      4883c008       add rax, 8
│           0x000011ae      488b00         mov rax, qword [rax]
│           0x000011b1      488d156f0e00.  lea rdx, qword str.KS_LICENSE_KEY_2021_REV_1 ; 0x2027 ; "KS-LICENSE-KEY-2021-REV-1"
│           0x000011b8      4889d6         mov rsi, rdx                ; const char *s2
│           0x000011bb      4889c7         mov rdi, rax                ; const char *s1
│           0x000011be      e88dfeffff     call sym.imp.strcmp         ; int strcmp(const char *s1, const char *s2)
│           0x000011c3      85c0           test eax, eax
│       ┌─< 0x000011c5      7519           jne 0x11e0
│       │   0x000011c7      488d057a0e00.  lea rax, qword str.Congratulations___You_have_successfully_registered_your_premium_service. ; 0x2048 ; "Congratulations ! You have successfully registered your premium service."
│       │   0x000011ce      4889c7         mov rdi, rax                ; const char *s
│       │   0x000011d1      e85afeffff     call sym.imp.puts           ; int puts(const char *s)
│       │   0x000011d6      bf00000000     mov edi, 0                  ; int status
│       │   0x000011db      e880feffff     call sym.imp.exit           ; void exit(int status)
│       │   ; CODE XREF from main @ 0x11c5
│       └─> 0x000011e0      488b45f0       mov rax, qword [s1]
│           0x000011e4      4883c008       add rax, 8
│           0x000011e8      488b00         mov rax, qword [rax]
│           0x000011eb      4889c6         mov rsi, rax
│           0x000011ee      488d05a30e00.  lea rax, qword str.s_is_not_a_valid_license_key. ; 0x2098 ; "%s is not a valid license key.\n"
│           0x000011f5      4889c7         mov rdi, rax                ; const char *format
│           0x000011f8      b800000000     mov eax, 0
│           0x000011fd      e83efeffff     call sym.imp.printf         ; int printf(const char *format)
│           0x00001202      bf00000000     mov edi, 0                  ; int status
└           0x00001207      e854feffff     call sym.imp.exit           ; void exit(int status)


KS-LICENSE-KEY-2021-REV-1 er licens virklig kedlig